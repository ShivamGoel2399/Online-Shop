{"version":3,"sources":["components/Header.js","components/Nav.js","components/Login.js","Utils/config.js","components/Product.js","components/Products.js","container/shop.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Nav","classNameName","href","src","width","height","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","activeClassName","to","Login","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","msg","inherits","createClass","key","value","refs","uid","pwd","userid","setState","updateLoginStatus","htmlFor","ref","placeholder","onClick","doLogin","bind","clear","React","Component","URLS","Product","style","item","url","name","price","Products","items","map","itemObject","Product_Product","Shop","err","_this2","fetch","then","response","json","data","console","log","catch","error","doAjax","Header_Header","Nav_Nav","Products_Products","App","isLogin","loginState","arguments","length","undefined","shop_Shop","Login_Login","isAuth","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.904a1951.chunk.js","sourcesContent":["import React from 'react';\r\nexport const Header = ()=>{\r\n    return(\r\n        <h1 className=\"alert-success\">Online Shop</h1>\r\n    )\r\n}","import React from 'react';\r\nexport const Nav = ()=>{\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n<a classNameName=\"navbar-brand\" href=\"#\">\r\n    <img src=\"https://www.svgimages.com/svg-image/s7/amazon-logo-256x256.png\" width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"No logo found\"/>\r\n    Shopping\r\n  </a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav mr-auto\">\r\n      <li className=\"nav-item active\">\r\n      <a className=\"nav-link\" activeClassName=\"active\" to=\"/\">Items <span className=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link\" to=\"/about\">AboutUs</a>\r\n      </li>\r\n      </ul>\r\n        </div>\r\n</nav>\r\n    )\r\n}","import React from 'react';\r\nexport class Login extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {msg:''};\r\n\r\n    }\r\n    clear(){\r\n        this.refs.uid.value ='';\r\n        this.refs.pwd.value ='';\r\n    }\r\n    doLogin(){\r\n        var userid = this.refs.uid.value;\r\n        var pwd = this.refs.pwd.value;\r\n        if(userid==pwd){\r\n            this.setState({msg:'Welcome '+userid});\r\n            this.props.updateLoginStatus(true,userid);\r\n        }\r\n        else{\r\n            this.setState({msg:'Invalid Userid or Password'});\r\n            this.props.updateLoginStatus(false);\r\n        }\r\n\r\n    }\r\n    render(){\r\n        return (\r\n            <div >\r\n\r\n                <h2 className=\"alert-info\">Login Page</h2>\r\n                <h3 className=\"alert-success\">{this.state.msg}</h3>\r\n                <div className=\"form-group\">\r\n                   <label htmlFor=\"userid\">Userid</label>\r\n                   <input id=\"userid\" ref=\"uid\" type=\"text\" className=\"form-control\" placeholder=\"type Userid here\"/>     \r\n                </div>\r\n                <div className=\"form-group\">\r\n                   <label htmlFor=\"\">Password</label>\r\n                   <input type=\"password\" ref=\"pwd\" className=\"form-control\" placeholder=\"type Password here\"/>     \r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button onClick={this.doLogin.bind(this)} className=\"btn btn-primary\">Login</button>\r\n                    &nbsp;\r\n                    <button onClick={this.clear.bind(this)} className=\"btn btn-danger\">Clear</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","export const URLS= {\r\n    \"mobile\":'https://raw.githubusercontent.com/brainmentorspvtltd/myserverdata/master/mobiles.json'\r\n}","import React from 'react';\r\nexport const Product = (props)=>{\r\n    const myStyle = {width:'18rem'};\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-sm-6\">\r\n            <div className=\"card\" style={myStyle}>\r\n  <img className=\"card-img-top\" src={props.item.url} alt=\"Card image cap\"/>>\r\n  <div className=\"card-body\">\r\n    <h5 className=\"card-title\">{props.item.name}</h5>\r\n    <p className=\"card-text\">{props.item.price}</p>\r\n    <a href=\"#\" className=\"btn btn-primary\">Add to Cart</a>\r\n  </div>\r\n</div>\r\n</div>\r\n        \r\n            <div className=\"col-sm-6\">\r\n                <h2>Product Details</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Product} from './Product';\r\nexport const Products = (props)=>{\r\n    return (\r\n        props.items.map(itemObject=><Product item={itemObject}/>)\r\n        \r\n    )\r\n}","import React from 'react';\r\nimport {Header} from '../components/Header';\r\nimport {Nav} from '../components/Nav';\r\nimport {URLS} from '../Utils/config';\r\nimport {Products} from '../components/Products';\r\nexport class Shop extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {items:[],err:{}};\r\n  }  \r\n  \r\n  doAjax(){\r\n      fetch(URLS.mobile).then(response=>{\r\n          response.json().then(data=>{\r\n               this.setState({items:data['mobiles']});\r\n               console.log(\"Data is \",data['mobiles']); \r\n          }).catch(error=>{\r\n            this.setState({err:error});\r\n          })\r\n      }).catch(error=>{\r\n        this.setState({err:error});\r\n      });\r\n  }\r\n\r\n  componentWillMount() {\r\n      \r\n  }\r\n  componentDidMount () {\r\n    this.doAjax();\r\n  }\r\n  \r\n  \r\nrender(){\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <Nav/>\r\n            <h3>Welcome {this.props.userid}</h3>\r\n            <Products items = {this.state.items}/>\r\n        </div>\r\n    )\r\n}\r\n}","import React from 'react';\nimport {Header} from './components/Header';\nimport {Nav} from './components/Nav';\nimport {Login} from './components/Login';\nimport {Shop} from './container/shop';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nexport default class App extends React.Component{\nconstructor(){\n  super();\n  this.state = {isLogin:false,userid:''};\n}\nisAuth(loginState, uid=''){\n  this.setState({isLogin:loginState,userid:uid});\n}\nrender(){\n  return (<div className=\"container\">\n    {this.state.isLogin?<Shop userid={this.state.userid}/>:<Login updateLoginStatus={this.isAuth.bind(this)}/>}\n   \n  </div>);\n}\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}